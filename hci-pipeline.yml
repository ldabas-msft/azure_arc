trigger:
  branches:
    include:
    - main

variables:
  - group: hcibox-deployment  # Must contain all variables below
  - name: spnClientId
    value: ${{ variables.spnClientId }}
  - name: spnClientSecret
    value: ${{ variables.spnClientSecret }}
  - name: spnTenantId
    value: ${{ variables.spnTenantId }}
  - name: spnProviderId
    value: ${{ variables.spnProviderId }}
  - name: subscriptionId
    value: ${{ variables.subscriptionId }}
  - name: resourceGroupName
    value: ${{ variables.resourceGroupName }}
  - name: location
    value: 'eastus'
  - name: windowsAdminUsername
    value: ${{ variables.windowsAdminUsername }}
  - name: windowsAdminPassword
    value: ${{ variables.windowsAdminPassword }}
  - name: logAnalyticsWorkspaceName
    value: ${{ variables.logAnalyticsWorkspaceName }}
  - name: deployBastion
    value: ${{ variables.deployBastion }}
  - name: autoDeployClusterResource
    value: ${{ variables.autoDeployClusterResource }}
  - name: autoUpgradeClusterResource
    value: ${{ variables.autoUpgradeClusterResource }}
  - name: githubAccount
    value: ${{ variables.githubAccount }}
  - name: githubBranch
    value: ${{ variables.githubBranch }}

pool:
  vmImage: 'windows-latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'HCIBox-ServiceConnection'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Diagnostic check for required variables
      Write-Host "Checking required variables..."
      $requiredVars = @(
        'resourceGroupName',
        'location',
        'spnClientId',
        'spnClientSecret',
        'spnTenantId',
        'spnProviderId',
        'windowsAdminUsername',
        'windowsAdminPassword',
        'logAnalyticsWorkspaceName',
        'deployBastion',
        'autoDeployClusterResource',
        'autoUpgradeClusterResource',
        'githubAccount',
        'githubBranch'
      )
      
      $missingVars = @()
      foreach ($var in $requiredVars) {
        $value = Get-Item "env:$var" -ErrorAction SilentlyContinue
        Write-Host "$var: $($value.Value)"
        if (-not $value) {
          $missingVars += $var
        }
      }
      
      if ($missingVars.Count -gt 0) {
        Write-Error "Missing required variables: $($missingVars -join ', ')"
        exit 1
      }
      
      Write-Host "All required variables are present. Proceeding with deployment..."
      
      # Create resource group
      Write-Host "Creating resource group: $(resourceGroupName) in $(location)"
      az group create --name "$(resourceGroupName)" --location "$(location)"
      
      # Deploy main template
      Write-Host "Starting deployment to resource group: $(resourceGroupName)"
      az deployment group create `
        --resource-group "$(resourceGroupName)" `
        --template-file "$(System.DefaultWorkingDirectory)/azure_jumpstart_hcibox/artifacts/main.bicep" `
        --parameters `
          spnClientId="$(spnClientId)" `
          spnClientSecret="$(spnClientSecret)" `
          spnTenantId="$(spnTenantId)" `
          spnProviderId="$(spnProviderId)" `
          windowsAdminUsername="$(windowsAdminUsername)" `
          windowsAdminPassword="$(windowsAdminPassword)" `
          logAnalyticsWorkspaceName="$(logAnalyticsWorkspaceName)" `
          deployBastion="$(deployBastion)" `
          autoDeployClusterResource="$(autoDeployClusterResource)" `
          autoUpgradeClusterResource="$(autoUpgradeClusterResource)" `
          githubAccount="$(githubAccount)" `
          githubBranch="$(githubBranch)" `
          location="$(location)"