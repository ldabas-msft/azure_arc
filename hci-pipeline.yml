trigger:
  branches:
    include:
    - main

variables:
  - group: hcibox-deployment  # Must contain all variables below
  - name: spnClientId
    value: ${{ variables.spnClientId }}
  - name: spnClientSecret
    value: ${{ variables.spnClientSecret }}
  - name: spnTenantId
    value: ${{ variables.spnTenantId }}
  - name: spnProviderId
    value: ${{ variables.spnProviderId }}
  - name: subscriptionId
    value: ${{ variables.subscriptionId }}
  - name: resourceGroupName
    value: ${{ variables.resourceGroupName }}
  - name: location
    value: 'eastus'
  - name: windowsAdminUsername
    value: ${{ variables.windowsAdminUsername }}
  - name: windowsAdminPassword
    value: ${{ variables.windowsAdminPassword }}
  - name: logAnalyticsWorkspaceName
    value: ${{ variables.logAnalyticsWorkspaceName }}
  - name: deployBastion
    value: ${{ variables.deployBastion }}
  - name: autoDeployClusterResource
    value: ${{ variables.autoDeployClusterResource }}
  - name: autoUpgradeClusterResource
    value: ${{ variables.autoUpgradeClusterResource }}
  - name: githubAccount
    value: ${{ variables.githubAccount }}
  - name: githubBranch
    value: ${{ variables.githubBranch }}

pool:
  vmImage: 'windows-latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'HCIBox-ServiceConnection'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # Create resource group - Fixed the variable reference
      Write-Host "Creating resource group: $env:RESOURCEGROUPNAME in $env:LOCATION"
      az group create --name "$env:RESOURCEGROUPNAME" --location "$env:LOCATION"
      
      # Deploy main template - Fixed variable references
      Write-Host "Starting deployment to resource group: $env:RESOURCEGROUPNAME"
      az deployment group create `
        --resource-group "$env:RESOURCEGROUPNAME" `
        --template-file "$(System.DefaultWorkingDirectory)/azure_jumpstart_hcibox/artifacts/main.bicep" `
        --parameters `
          spnClientId="$env:SPNCLIENTID" `
          spnClientSecret="$env:SPNCLIENTSECRET" `
          spnTenantId="$env:SPNTENANTID" `
          spnProviderId="$env:SPNPROVIDERID" `
          windowsAdminUsername="$env:WINDOWSADMINUSERNAME" `
          windowsAdminPassword="$env:WINDOWSADMINPASSWORD" `
          logAnalyticsWorkspaceName="$env:LOGANALYTICSWORKSPACENAME" `
          deployBastion="$env:DEPLOYBASTION" `
          autoDeployClusterResource="$env:AUTODEPLOYCLUSTERRESOURCE" `
          autoUpgradeClusterResource="$env:AUTOUPGRADECLUSTERRESOURCE" `
          githubAccount="$env:GITHUBACCOUNT" `
          githubBranch="$env:GITHUBBRANCH" `
          location="$env:LOCATION"