trigger:
  branches:
    include:
    - main

variables:
  - group: hcibox-deployment  # Must contain all variables below
  - name: spnClientId
    value: ${{ variables.spnClientId }}
  - name: spnClientSecret
    value: ${{ variables.spnClientSecret }}
  - name: spnTenantId
    value: ${{ variables.spnTenantId }}
  - name: spnProviderId
    value: ${{ variables.spnProviderId }}
  - name: subscriptionId
    value: ${{ variables.subscriptionId }}
  - name: resourceGroupName
    value: ${{ variables.resourceGroupName }}
  - name: location
    value: 'eastus'
  - name: windowsAdminUsername
    value: ${{ variables.windowsAdminUsername }}
  - name: windowsAdminPassword
    value: ${{ variables.windowsAdminPassword }}
  - name: logAnalyticsWorkspaceName
    value: ${{ variables.logAnalyticsWorkspaceName }}
  - name: deployBastion
    value: ${{ variables.deployBastion }}
  - name: autoDeployClusterResource
    value: ${{ variables.autoDeployClusterResource }}
  - name: autoUpgradeClusterResource
    value: ${{ variables.autoUpgradeClusterResource }}
  - name: githubAccount
    value: ${{ variables.githubAccount }}
  - name: githubBranch
    value: ${{ variables.githubBranch }}

pool:
  vmImage: 'windows-latest'

steps:
- task: AzureCLI@2
  inputs:
    azureSubscription: 'HCIBox-ServiceConnection'
    scriptType: 'ps'
    scriptLocation: 'inlineScript'
    inlineScript: |
      # First create the resource group
      az group create --name $(resourceGroupName) --location $(location)
      
      # Then deploy main template
      az deployment group create `
        --resource-group $(resourceGroupName) `
        --template-file "$(System.DefaultWorkingDirectory)/azure_jumpstart_hcibox/artifacts/main.bicep" `
        --parameters `
          spnClientId=$(spnClientId) `
          spnClientSecret=$(spnClientSecret) `
          spnTenantId=$(spnTenantId) `
          spnProviderId=$(spnProviderId) `
          windowsAdminUsername=$(windowsAdminUsername) `
          windowsAdminPassword=$(windowsAdminPassword) `
          logAnalyticsWorkspaceName=$(logAnalyticsWorkspaceName) `
          deployBastion=$(deployBastion) `
          autoDeployClusterResource=$(autoDeployClusterResource) `
          autoUpgradeClusterResource=$(autoUpgradeClusterResource) `
          githubAccount=$(githubAccount) `
          githubBranch=$(githubBranch) `
          location=$(location)